//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4200
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4200.
// 
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Threading;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;
using TemplateManager.Modules.Services.Properties;

#pragma warning disable 1591

namespace TemplateManager.Modules.Services.RemoteServices
{
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.4016")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [WebServiceBinding(Name = "TemplateManagerServiceBinding", Namespace = "urn:TemplateManagerService")]
    public partial class TemplateManagerService : SoapHttpClientProtocol
    {
        private SendOrPostCallback GetLatestVersionOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public TemplateManagerService()
        {
            Url = Settings.Default.TemplateManager_Modules_Services_RemoteServices_TemplateManagerService;
            if((IsLocalFileSystemWebService(Url) == true))
            {
                UseDefaultCredentials = true;
                useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get { return base.Url; }
            set
            {
                if((((IsLocalFileSystemWebService(base.Url) == true)
                     && (useDefaultCredentialsSetExplicitly == false))
                    && (IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get { return base.UseDefaultCredentials; }
            set
            {
                base.UseDefaultCredentials = value;
                useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event GetLatestVersionCompletedEventHandler GetLatestVersionCompleted;

        /// <remarks/>
        [SoapRpcMethod("urn:TemplateManagerServiceAction", RequestNamespace = "urn:TemplateManagerService",
            ResponseNamespace = "urn:TemplateManagerService")]
        [return: SoapElement("VersionInfo")]
        public VersionInfo GetLatestVersion()
        {
            object[] results = Invoke("GetLatestVersion", new object[0]);
            return ((VersionInfo) (results[0]));
        }

        /// <remarks/>
        public void GetLatestVersionAsync()
        {
            GetLatestVersionAsync(null);
        }

        /// <remarks/>
        public void GetLatestVersionAsync(object userState)
        {
            if((GetLatestVersionOperationCompleted == null))
            {
                GetLatestVersionOperationCompleted = new SendOrPostCallback(OnGetLatestVersionOperationCompleted);
            }
            InvokeAsync("GetLatestVersion", new object[0], GetLatestVersionOperationCompleted, userState);
        }

        private void OnGetLatestVersionOperationCompleted(object arg)
        {
            if((GetLatestVersionCompleted != null))
            {
                var invokeArgs = ((InvokeCompletedEventArgs) (arg));
                GetLatestVersionCompleted(this,
                                          new GetLatestVersionCompletedEventArgs(invokeArgs.Results,
                                                                                 invokeArgs.Error,
                                                                                 invokeArgs.Cancelled,
                                                                                 invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if(((url == null)
                || (url == string.Empty)))
            {
                return false;
            }
            var wsUri = new Uri(url);
            if(((wsUri.Port >= 1024)
                && (string.Compare(wsUri.Host, "localHost", StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Xml", "2.0.50727.4016")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [SoapType(Namespace = "urn:TemplateManagerService")]
    public partial class VersionInfo
    {
        private int buildField;

        private string configurationField;

        private string downloadUrlField;

        private string informationUrlField;
        private string labelField;
        private int majorField;

        private int minorField;
        private int revisionField;

        /// <remarks/>
        public int Major
        {
            get { return majorField; }
            set { majorField = value; }
        }

        /// <remarks/>
        public int Minor
        {
            get { return minorField; }
            set { minorField = value; }
        }

        /// <remarks/>
        public int Build
        {
            get { return buildField; }
            set { buildField = value; }
        }

        /// <remarks/>
        public int Revision
        {
            get { return revisionField; }
            set { revisionField = value; }
        }

        /// <remarks/>
        public string Configuration
        {
            get { return configurationField; }
            set { configurationField = value; }
        }

        /// <remarks/>
        public string Label
        {
            get { return labelField; }
            set { labelField = value; }
        }

        /// <remarks/>
        public string DownloadUrl
        {
            get { return downloadUrlField; }
            set { downloadUrlField = value; }
        }

        /// <remarks/>
        public string InformationUrl
        {
            get { return informationUrlField; }
            set { informationUrlField = value; }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetLatestVersionCompletedEventHandler(object sender, GetLatestVersionCompletedEventArgs e);

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.4016")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class GetLatestVersionCompletedEventArgs : AsyncCompletedEventArgs
    {
        private object[] results;

        internal GetLatestVersionCompletedEventArgs(object[] results,
                                                    Exception exception,
                                                    bool cancelled,
                                                    object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public VersionInfo Result
        {
            get
            {
                RaiseExceptionIfNecessary();
                return ((VersionInfo) (results[0]));
            }
        }
    }
}

#pragma warning restore 1591